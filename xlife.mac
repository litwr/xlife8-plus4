;used zp: 3-7, $14, $8e-8f, $92, $b6-b7, $ba-bb, $d0-e7, $f1-f8, $fc
;free zp: $b8-b9, $9f-a2, $a8, $cc, $fd
viewport = $8e    ;+$8f
startp   = $D4    ;+$D5
currp    = $D8    ;+$D9
i1       = $D0    ;+$D1
i2       = $D2
t1       = $D3
adjcell  = $D6    ;+$D7
adjcell2 = $DA    ;+$DB
clncnt   = $DC
mode     = $DD    ;0-stop, 1-run, 2-hide, 3-exit
tilecnt  = $DE    ;+$DF
pseudoc  = $E0
cellcnt  = $E1    ;+$E2 .. $E5
crsrtile = $E6    ;+$E7
t2       = $BA
t3       = $BB
ntscmask = $FC
gencnt   = $FC1   ; .. $FC7
xdir     = 3      ;linear transformation
ydir     = 4
x0       = 5  
y0       = 6  
xchgdir  = $92
tcscr    = $fcf   ; .. $fd1
xcrsr    = $fe0   ; .. $fe2
ycrsr    = $fe5   ; .. $fe7
fn       = $1bc0  ; .. $1bd1
svfnlen  = $1bd2
svfn     = $1bd3  ; .. $1be6
temp     = $b6    ; .. $b7
pctemp1  = $f1    ; .. $f8
pctemp2  = $1ff8  ; .. $1fff

hormax   = 20     ;160
vermax   = 24     ;192
total    = hormax*vermax+1
plainbox = tiles+(hormax*vermax*tilesize)

left     = 8      ;all directions
ul       = 10     ;not zero!
up       = 12
ur       = 14
right    = 16
dr       = 18
down     = 20
dl       = 22
next     = 24
count    = 26
sum      = 60
video    = 58
pc       = 61
tile     .macro
l0       .byte 0
l1       .byte 0
l2       .byte 0
l3       .byte 0
l4       .byte 0
l5       .byte 0
l6       .byte 0
l7       .byte 0
left     .word 0	;+8
ul       .word 0
up       .word 0        ;+12
ur       .word 0
right    .word 0        ;+16
dr       .word 0
down     .word 0        ;+20
dl       .word 0
next     .word 0        ;+24
count    .repeat 32, 0  ;+26
video    .word 0        ;+58
sum      .byte 0        ;+60
pc       .repeat 8,0    ;+61
         .endm
tilesize = 69

testlf   .macro
         lda (currp),y
         and #$80
         beq finish

         lda #1
         sta t1
         ora (adjcell),y
         sta (adjcell),y
finish       
         .endm

testrt   .macro
         lda (currp),y
         and #1
         beq finish

         lda #$80
         sta t1
         ora (adjcell),y
         sta (adjcell),y
finish       
         .endm

assign16 .macro  ;\1 <- \2
         lda \2
         sta \1
         lda \2+1
         sta \1+1
         .endm

vidmac1  .macro
         lda (currp),y
         lsr
         lsr
         lsr
         lsr
         tax
         lda vistab,x
         sta (i1),y
         .endm

vidmac1p .macro
         lda (currp),y
         sty 7
         sta i2
         ldy t1
         lda (currp),y
         tay
         and i2
         ldx 7
         sta pctemp1,x   ;old
         tya
         eor #$ff
         and i2
         sta pctemp2,x   ;new
         lsr
         lsr
         lsr
         lsr
         tax
         lda vistab,x
         asl
         ldy 7
         sta (i1),y
         lda pctemp1,y
         lsr
         lsr
         lsr
         lsr
         tax
         lda vistab,x
         ora (i1),y
         sta (i1),y
         .endm

vidmac2  .macro
         lda (currp),y
         and #$f
         tax
         lda vistab,x
         sta (i1),y
         .endm

vidmac2p .macro
         lda pctemp2,y
         and #$f
         tax
         lda vistab,x
         asl
         sta (i1),y
         lda pctemp1,y
         and #$f
         tax
         lda vistab,x
         ora (i1),y
         sta (i1),y
         .endm

genmac   .macro
         ldy #\1+3
         lda (currp),y
         tax
         ldy #\2 
         lda (currp),y
         and #3
         clc
         adc #>gentab
         sta m1+2
m1       lda gentab,x
         sta i2

         ldy #\1+2
         lda (currp),y
         tax
         ldy #\2
         lda (currp),y
         and #$c
         lsr
         lsr
         adc #>gentab
         sta m2+2
m2       lda gentab,x
         asl
         asl
         ora i2
         sta i2

         ldy #\1+1
         lda (currp),y
         tax
         ldy #\2
         lda (currp),y
         and #$30
         lsr
         lsr
         lsr
         lsr
         adc #>gentab
         sta m3+2
m3       lda gentab,x
         asl
         asl
         asl
         asl
         ora i2
         sta i2

         ldy #\1
         lda (currp),y
         tax
         ldy #\2
         lda (currp),y
         and #$c0
         rol	;CY=0 must be
         rol
         rol
         adc #>gentab
         sta m4+2
m4       lda gentab,x
         ror
         ror
         ror
         ora i2
         tax
         ldy #\2
         sta (currp),y
         lda tab3,x
         tax
         ldy #sum 
         adc (currp),y
         sta (currp),y
         lda mode
         cmp #2       ;hide?
         beq cont2

         txa
         #cellsum
cont2
         .endm

cellsum  .macro
         adc cellcnt+4   ;CY=0
         cmp #$3a
         bcs l1

         sta cellcnt+4
         bcc cont2
     
l1       sbc #$a
         sta cellcnt+4
         ldy #$30
         #incbcd cellcnt+3
         sty cellcnt+3
         #incbcd cellcnt+2
         sty cellcnt+2
         #incbcd cellcnt+1
         sty cellcnt+1
         #incbcd cellcnt
         sty cellcnt
cont2
         .endm

zero16   .macro
         lda #0
         sta \1
         sta \1+1
         .endm

incbcd   .segment
         inc \1
         lda \1
         cmp #$3A
         bne cont2
         .endm

inibcd   .macro
         lda #$30
         ldx #\2
loop0    sta \1,x
         dex
         bpl loop0
         .endm

iniram   .macro
         ldy #0
loop1    lda $1800,y
         sta $332,y
         iny
         bne loop1
loop2    lda $1900,y
         sta $432,y
         iny
         cpy #$0a
         bne loop2
         .endm

